AWSTemplateFormatVersion: 2010-09-09

Description: "A lab that creates an S3 bucket and a Dynamo DB table for web app configuration"

Parameters:
  AmazonLinuxAMIID:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      EnableDnsHostnames: true
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: Lab VPC

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Named
          Value: Lab IGW

  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    DependsOn: AttachGateway
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - "0"
        - !GetAZs ""
      Tags:
        - Key: Name
          Value: Public Subnet 1

  PublicSubnet2:
    DependsOn: AttachGateway
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select
        - "1"
        - !GetAZs ""
      Tags:
        - Key: Name
          Value: Public Subnet 2

  PublicRouteTable:
    DependsOn: PublicSubnet1
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Route Table

  PublicRoute:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    DependsOn: PublicRoute
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    DependsOn: PublicRoute
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  WebInstance:
    DependsOn: PublicSubnet1RouteTableAssociation
    Type: "AWS::EC2::Instance"
    Properties:
      IamInstanceProfile: "LabInstanceProfile"
      ImageId: !Ref AmazonLinuxAMIID
      InstanceType: t3.micro
      NetworkInterfaces:
        - DeviceIndex: "0"
          AssociatePublicIpAddress: true
          SubnetId: !Ref PublicSubnet1
          GroupSet:
            - !Ref WebSecurityGroup
      SourceDestCheck: false
      Tags:
        - Key: Name
          Value: Web Application
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash -ex
          # Update yum
          yum -y update
          # Add node's source repo
          curl -sL https://rpm.nodesource.com/setup_15.x | bash -
          #Install nodejs
          yum -y install nodejs
          # Create a dedicated directory for the application
          mkdir -p /var/app
          wget https://assingmentstuffdata.s3.amazonaws.com/S3mediasite.zip
          unzip S3mediasite.zip -d /var/app

          cd /var/app/S3mediasite
          npm install
          cd ./S3Client
          npm install
          cd ..
          npm start

  WebSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access
      GroupName: Web Security Group
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Web Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
